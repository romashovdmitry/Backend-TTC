# Generated by Django 5.0.4 on 2024-06-16 08:31

import django.core.validators
import django.db.models.deletion
import main.utils
import user.models.player
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(error_messages={'unique': 'Email exists'}, max_length=254, null=True, unique=True, validators=[django.core.validators.EmailValidator], verbose_name="User's email")),
                ('password', models.CharField(blank=True, help_text="User's password", max_length=4096, null=True, verbose_name="User's password")),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created date, time')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Update date, time', verbose_name='')),
                ('birth_date', models.DateField(help_text="User's birth date", verbose_name="User's birth date")),
                ('sex', models.CharField(choices=[(0, 'MALE'), (1, 'FEMALE')], help_text="Choise of player's sex", max_length=16)),
                ('second_name', models.CharField(help_text="User's second name", max_length=128, verbose_name="User's second name")),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ClubAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created date, time', null=True, verbose_name='Created date, time')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Update date, time', null=True, verbose_name='Created date, time')),
                ('is_active', models.BooleanField(default=True, help_text='Project use this field instead of full removing object from database. Just deactivate ', verbose_name='Object is active of not')),
                ('enter_code', models.CharField(help_text='New club admin have to enter this code to authorize', max_length=6, null=True, verbose_name='Code for authorization in club')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='club_admin_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Club Admin',
                'verbose_name_plural': 'Club Admins',
                'db_table': 'club_admin',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created date, time', null=True, verbose_name='Created date, time')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Update date, time', null=True, verbose_name='Created date, time')),
                ('is_active', models.BooleanField(default=True, help_text='Project use this field instead of full removing object from database. Just deactivate ', verbose_name='Object is active of not')),
                ('playing_nahd', models.CharField(choices=[(0, 'RIGHT_HAND'), (1, 'LEFT_HAND'), (2, 'BOTH')], help_text='By which hand player prefer to play, or both', max_length=16, null=True)),
                ('rating', models.PositiveBigIntegerField(default=100, help_text='Rating of player in club rating system')),
                ('blade', models.CharField(help_text="Player's Blade", max_length=256, null=True)),
                ('rubber_forehand', models.CharField(help_text="Player's Ruber Forehand", max_length=256, null=True)),
                ('rubber_backhand', models.CharField(help_text="Player's Ruber Backhand", max_length=256, null=True)),
                ('photo', models.ImageField(help_text='User Photo', null=True, upload_to=user.models.player.define_user_photo_path, validators=[main.utils.image_file_extension_validator], verbose_name='User Photo')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Player',
                'verbose_name_plural': 'Players',
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='TournamentAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Created date, time', null=True, verbose_name='Created date, time')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Update date, time', null=True, verbose_name='Created date, time')),
                ('is_active', models.BooleanField(default=True, help_text='Project use this field instead of full removing object from database. Just deactivate ', verbose_name='Object is active of not')),
                ('tournaments_done', models.BooleanField(default=False, help_text='Anount of held competitions', verbose_name='Tournaments done')),
                ('enter_code', models.CharField(blank=True, editable=False, help_text='New club admin have to enter this code to authorize', max_length=6, null=True, verbose_name='Code for authorization in club')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tournament_admin_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tournament Admin',
                'verbose_name_plural': 'Tournament Admins',
                'db_table': 'tournament_admin',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='email_index'),
        ),
    ]
